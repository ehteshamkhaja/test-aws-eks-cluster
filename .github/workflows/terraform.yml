name: 'EKS Provisioning using Terraform'

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Enter the action you need to do using Terraform'
        type: choice
        options:
          - plan
          - apply
          - destroy
permissions:
  contents: read
  id-token: write

jobs:

  CheckAuthenticationusingRole:
    runs-on: ubuntu-latest
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials 
        uses: aws-actions/configure-aws-credentials@v4
        with:
          audience: sts.amazonaws.com
          aws-region: us-west-1
          role-to-assume: arn:aws:iam::210613553230:role/github-id-role
      # Hello from AWS: WhoAmI
      - name: Sts GetCallerIdentity
        run: |
          aws sts get-caller-identity

  terraform-initialization:
    
    needs: CheckAuthenticationusingRole

    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS Credentials 
      uses: aws-actions/configure-aws-credentials@v4
      with:
          audience: sts.amazonaws.com
          aws-region: us-west-1
          role-to-assume: arn:aws:iam::210613553230:role/github-id-role

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: cd eks && terraform init

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: cd eks && terraform fmt -check

  Terraform-plan:
     needs: terraform-initialization
    # Generates an execution plan for Terraform
     if: $inputs.action == "plan" 
     runs-on: ubuntu-latest
     steps:
      - name: Configure AWS Credentials 
      uses: aws-actions/configure-aws-credentials@v4
      with:
          audience: sts.amazonaws.com
          aws-region: us-west-1
          role-to-assume: arn:aws:iam::210613553230:role/github-id-role

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
      - name: Terraform Init
        run: cd eks && terraform init

      - name: Terraform ${{ inputs.action }}
        run: |
           cd eks && terraform ${{ inputs.action }} 
        shell: bash
  
  Terraform-apply:
    needs: Terraform-plan
    if: $inputs.action == "apply" 
    runs-on: ubuntu-latest
    steps:
     - name: Configure AWS Credentials 
      uses: aws-actions/configure-aws-credentials@v4
      with:
          audience: sts.amazonaws.com
          aws-region: us-west-1
          role-to-assume: arn:aws:iam::210613553230:role/github-id-role

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
      - name: Terraform Init
        run: cd eks && terraform init

      - name: Terraform ${{ inputs.action }}
        run: |
          cd eks  && terraform ${{ inputs.action }}
        shell: bash
          